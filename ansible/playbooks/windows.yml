########################################
# AdoptOpenJDK - Ansible Playbook for: #
# -------- Windows 7, 8, 10 ---------  #
# - Windows Server 2008, 2012, 2016  - # 
########################################

################
# Please Note: #
################
# *** This playbook assumes that the Windows client machine has been configure to allow Ansible to run on it (WINRM)***
# Ensure you have opened Internet Explorer and completed the setup (other wise wget will not work)
# Run powershell as the Administrator
# wget https://raw.githubusercontent.com/ansible/ansible/devel/examples/scripts/ConfigureRemotingForAnsible.ps1 -OutFile .\ConfigureRemotingForAnsible.ps1
# .\ConfigureRemotingForAnsible.ps1 -CertValidityDays 9999
# .\ConfigureRemotingForAnsible.ps1 -EnableCredSSP
# .\ConfigureRemotingForAnsible.ps1 -ForceNewSSLCert
# .\ConfigureRemotingForAnsible.ps1 -SkipNetworkProfileCheck

- hosts: all
  
  ####################
  # Cygwin Variables #
  ####################
  vars:
    Cygwin_SITE_URL: http://mirrors.kernel.org/sourceware/cygwin/
    Cygwin_PACKAGE_DIR: c:\cygwin_packages
    Cygwin_ROOT_INST_DIR: C:\cygwin64
    Cygwin_CATEGORIES: Devel

  tasks:
  - block:

    ######################
    # Load variable file #
    ######################
    - name: Load AdoptOpenJDKs variable file
      include_vars: adoptopenjdk_variables_windows.yml
      
    ###################
    # Windows Updates #
    ###################
    - name: Download and Install Windows Updates
      win_updates:
        register: update_result
      ignore_errors: yes
      tags: patch_update

    - name: Reboot machine if necessary
      win_reboot:
        shutdown_timeout: 3600
        reboot_timeout: 3600
        when: update_result.reboot_required
      tags: patch_update

    ################
    # Jenkins user #
    ################
    - name: Create Jenkins user
      win_user:
        name: "{{ Jenkins_Username }}"
        fullname: AdoptOpenJDK Jenkins User
        password: "{{ lookup('file', '{{ Jenkins_Win_Passwd }}') }}"
        state: present
        password_never_expires: yes
        groups:
          - Users, Remote Desktop Users
      tags: jenkins_user

    ######################
    # Tools and Packages #
    ######################
    - name: Create C:\temp directory
      win_file:
        path: C:\temp
        state: directory
      tags: basic_config

    - name: Create C:\openjdk directory
      win_file:
        path: C:\openjdk
        state: directory
      tags: basic_config

    - name: Create cmd.exe shortcut
      win_shortcut:
        src: C:\Windows\System32\cmd.exe
        dest: C:\Users\Public\Desktop\cmd.lnk
        icon: C:\Windows\System32\cmd.exe,0
      tags: basic_config

    - name: Download Cygwin installer
      win_get_url:
        url: https://cygwin.com/setup-x86_64.exe
        dest: 'C:\temp\cygwin.exe'
        force: no
      tags: cygwin

    - name: Install Cygwin and its packages
      win_command: c:\temp\cygwin.exe --quiet-mode --download --local-install 
                    --delete-orphans --site {{ Cygwin_SITE_URL }} 
                    --local-package-dir {{ Cygwin_PACKAGE_DIR }} 
                    --root {{ Cygwin_ROOT_INST_DIR }} 
                    --categories {{ Cygwin_CATEGORIES }}
      tags: cygwin

    - name: Install Cygwin build extra packages
      win_command: C:\temp\cygwin.exe -q -P "{{ item }}"
      with_items:
        - unzip
        - zip
      tags: cygwin

    - name: Install Cygwin test extra packages
      win_command: C:\temp\cygwin.exe -q -P "{{ item }}"
      with_items:
        - curl
        - curl-debuginfo
        - libcurl-devel
        - libpng15
        - libpng-devel
        - perl-Text-CSV
        - xinit
        - xorg-server
        - xterm
      tags: cygwin

    - name: Remove c:\cygwin64\bin from the path if it exists
      win_path:
        elements:
          - 'C:\cygwin64\bin'
        state: absent
      tags: cygwin

    - name: Add c:\cygwin64\bin to the start of the %PATH%
      raw: setx PATH "C:\cygwin64\bin;$env:Path" -m
      tags: cygwin

    # Firefox
    - name: Test if Firefox is already installed
      win_stat:
          path: 'C:\Program Files\Mozilla Firefox\firefox.exe'
      register: firefox_installed
      tags: firefox

    - name: Check if Firefox is already downloaded
      win_stat:
          path: 'c:\Temp\firefox.exe'
      register: firefox_download
      tags: firefox

    - name: Download Firefox
      win_get_url:
        url: https://download.mozilla.org/?product=firefox-54.0-SSL&os=win64&lang=en-US
        dest: c:\Temp\firefox.exe
      when: (firefox_download.stat.exists == false) and (firefox_installed.stat.exists == false)
      tags: firefox

    - name: Install Firefox
      raw: c:\Temp\firefox.exe -ms
      when: (firefox_installed.stat.exists == false)
      tags: firefox

    # Strawberry Perl
    - name: Test if Strawberry Perl is already installed
      win_stat:
          path: 'C:\Strawberry\perl'
      register: strawberry_perl_installed
      tags: strawberry_perl

    - name: Check if Strawberry Perl is already downloaded
      win_stat:
          path: 'c:\Temp\strawberry-perl.zip'
      register: strawberry_perl_download
      tags: strawberry_perl

    - name: Download Strawberry Perl
      win_get_url:
        url: http://strawberryperl.com/download/5.26.0.1/strawberry-perl-5.26.0.1-64bit.zip
        dest: c:\Temp\strawberry-perl.zip
      when: (strawberry_perl_download.stat.exists == false) and (strawberry_perl_installed.stat.exists == false)
      tags: strawberry_perl

    - name: Unzip Strawberry Perl
      win_unzip:
        src: c:\Temp\strawberry-perl.zip
        dest: C:\Strawberry
      when: (strawberry_perl_installed.stat.exists == false)
      tags: strawberry_perl

    - name: Add Strawberry Perl to %PATH%
      win_path:
          elements:
          - 'C:\Strawberry\bin'
          state: present
      when: (strawberry_perl_installed.stat.exists == false)
      tags: strawberry_perl

    - name: Install Text::CSV_XS
      win_command: C:\Strawberry\perl\bin\perl -MCPAN -e "install Text::CSV_XS"
      tags: text_cvs

    # freemarker v2.3.8
    - name: Test if freemarker is already installed
      win_stat:
        path: 'C:\openjdk\freemarker.jar'
      register: freemarker_installed
      tags: freemarker

    - name: Download freemarker
      win_get_url: 
        url: http://central.maven.org/maven2/freemarker/freemarker/2.3.8/freemarker-2.3.8.jar
        dest: 'C:\openjdk\freemarker.jar'
      when: (freemarker_installed.stat.exists == false)
      tags: freemarker

    # freetype v2.5.3
    - name: Test if freetype is already installed
      win_stat:
        path: 'C:\openjdk\freetype-2.5.3'
      register: freetype_installed
      tags: freetype

    - name: Test if freetype is already downloaded
      win_stat:
        path: 'C:\temp\ft253.zip'
      when: (freetype_installed.stat.exists == false)
      register: freetype_download
      tags: freetype

    - name: Download freetype 2.5.3
      win_get_url:
        url: https://sourceforge.net/projects/freetype/files/freetype2/2.5.3/ft253.zip/download
        dest: C:\temp\ft253.zip
      when: (freetype_installed.stat.exists == false) and (freetype_download.stat.exists == false)
      tags: freetype

    - name: Unpack freetype
      win_unzip:
        src: C:\temp\ft253.zip
        dest: C:\openjdk
        delete_archive: yes
      when: (freetype_installed.stat.exists == false) and (freetype_download.stat.exists == false)
      tags: freetype

    - name: Add modify, write permissions for jenkins user
      win_acl:
        path: C:\openjdk\freetype-2.5.3
        user: "{{ Jenkins_Username }}"
        rights: Read,Write,Modify,FullControl,Delete
        type: allow
        state: present
      when: (freetype_installed.stat.exists == false) and (freetype_download.stat.exists == false)
      tags: freetype

    #########
    # cmake #
    #########
    - name: Download cmake installer
      win_get_url:
        url: https://cmake.org/files/v3.7/cmake-3.7.2-win64-x64.msi
        dest: 'C:\temp\cmake.msi'
        force: no
      tags: cmake

    - name: Install cmake
      raw: C:\temp\cmake.msi /quite
      ignore_errors: yes
      tags: cmake

    - name: Cleanup cmake
      win_file:
        path: C:\temp\cmake.msi
        state: absent
      ignore_errors: yes
      tags: cmake

    #######
    # GIT #
    #######
    - name: Test if GIT is already installed
      win_stat:
          path: 'C:\Program Files\Git'
      register: git_installed
      tags: git

    - name: Check if GIT installer is already downloaded
      win_stat:
          path: 'C:\temp\git.exe'
      register: git_download
      tags: git

    - name: Download GIT installer
      win_get_url:
        url: 'https://github.com/git-for-windows/git/releases/download/v2.14.3.windows.1/Git-2.14.3-64-bit.exe'
        dest: 'C:\temp\git.exe'
      when: (git_download.stat.exists == false) and (git_installed.stat.exists == false)
      tags: git

    - name: Install GIT
      win_command: 'C:\temp\git.exe /SILENT /COMPONENTS="icons,ext\reg\shellhere,assoc,assoc_sh"'
      when: (git_installed.stat.exists == false)
      tags: git
     
    #####################
    # Java Installation #
    #####################
    # Java 7
    - name: Test if Java 7 is already installed
      win_stat:
          path: 'C:\Program Files\Java\java-se-7u75-ri'
      register: java7_installed
      tags: java7

    - name: Check if Java 7 is already downloaded
      win_stat:
          path: 'C:\temp\jdk7u75-b13.zip'
      register: java7_download
      tags: java7

    - name: Download Java 7
      win_get_url:
        url: http://download.java.net/openjdk/jdk7u75/ri/jdk_ri-7u75-b13-windows-i586-18_dec_2014.zip
        dest: 'C:\temp\jdk7u75-b13.zip'
      when: (java7_download.stat.exists == false) and (java7_installed.stat.exists == false)
      tags: java7

    - name: Install Java 7
      win_unzip:
        src: C:\temp\jdk7u75-b13.zip
        dest: C:\Program Files\Java
        delete_archive: yes
      when: (java7_installed.stat.exists == false)
      tags: java7
    
    # Java 8
    - name: Test if Java 8 is already installed
      win_stat:
          path: 'C:\Program Files\Java\jdk8u144-b01'
      register: java8_installed
      tags: java8

    - name: Check if Java 8 is already downloaded
      win_stat:
          path: 'C:\temp\jdk8u144-b01.zip'
      register: java8_download
      tags: java8

    - name: Download Java 8
      win_get_url:
        url: https://github.com/AdoptOpenJDK/openjdk8-releases/releases/download/jdk8u144-b01/OpenJDK8_x64_Win_jdk8u144-b01.zip
        dest: 'C:\temp\jdk8u144-b01.zip'
      when: (java8_download.stat.exists == false) and (java8_installed.stat.exists == false)
      tags: java8

    - name: Install Java 8
      win_unzip:
        src: C:\temp\jdk8u144-b01.zip
        dest: C:\Program Files\Java
      when: (java8_installed.stat.exists == false)
      tags: java8

    - name: Set JAVA_HOME to version 8
      win_path:
        name: JAVA_HOME
        elements: 
          - 'C:\Program Files\Java\jdk8u144-b01'
        scope: machine
        state: present
      when: (java8_installed.stat.exists == false)
      tags: java8

    - name: Add JAVA_HOME/bin to Path
      win_path:
        name: Path
        elements: 
          - 'C:\Program Files\Java\jdk8u144-b01\bin'
        scope: machine
        state: present
      tags: java8

    ###########################
    # Apache ANT Installation #
    ###########################
    - name: Download Apache ANT
      win_get_url:
        url: http://apache.forsale.plus/ant/binaries/apache-ant-1.10.1-bin.zip
        dest: c:\temp\ant.zip
        force: no
      tags: ant

    - name: Deploy Apache ANT
      win_unzip:
        src: c:\temp\ant.zip
        dest: c:\apache-ant\
        creates: c:\apache-ant
      tags: ant

    - name: Set ANT_HOME
      raw: setx ANT_HOME "C:\apache-ant\apache-ant-1.10.1" /M
      tags: ant

    - name: Add %ANT_HOME%\bin to %PATH%
      win_path:
          elements:
          - '%ANT_HOME%\bin'
          state: present
      tags: ant

    - name: Download ant-contrib
      win_get_url:
        url: https://sourceforge.net/projects/ant-contrib/files/ant-contrib/ant-contrib-1.0b2/ant-contrib-1.0b2-bin.zip
        dest: c:\temp\ant-contrib.zip
        force: no
      tags: ant

    - name: unzip ant-contrib
      win_unzip:
        src: c:\temp\ant-contrib.zip
        dest: c:\temp\ant-contrib
        creates: c:\temp\ant-contrib
      tags: ant

    - name: Copy the ant-contrib.jar to ANT's lib folder
      win_copy:
        src: C:\temp\ant-contrib\ant-contrib\lib\ant-contrib.jar
        dest: C:\apache-ant\apache-ant-1.10.1\lib\ant-contrib.jar
        remote_src: True
      tags: ant

    ################################
    # Visual Studio Community 2013 #
    ################################
    - name: Download Visual Studio Community 2013
      win_get_url:
        url: 'https://go.microsoft.com/fwlink/?LinkId=532495'
        dest: 'C:\TEMP\vs2013_community.exe'
        force: no
      tags: visual_studio_2013

    - name: Install Visual Studio Community 2013
      raw: 'C:\TEMP\vs2013_community.exe /Silent /NoRestart
            /Log C:\TEMP\vs2013_install_log.txt'
      tags: visual_studio_2013

    - name: Reboot machine after Visual Studio installation
      win_reboot:
      tags: visual_studio_2013

    #######################
    # NVidia Cuda Toolkit #
    #######################
    - name: Check if NVidia CUDA toolkit is aready installed
      win_stat:
          path: 'C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v9.0'
      register: cuda_installed
      tags: Cuda_Toolkit
    
    - name: Download NVidia CUDA toolkit - Windows 7,8 and Server 2008,2012
      win_get_url:
        url: 'https://developer.nvidia.com/compute/cuda/9.0/Prod/network_installers/cuda_9.0.176_windows_network-exe'
        dest: 'C:\temp\cuda_9.0.176_windows_network-exe.exe'
      when: (cuda_installed.stat.exists == false) and (ansible_distribution_major_version == "5" or ansible_distribution_major_version == "6")
      tags: Cuda_Toolkit

    - name: Install NVidia CUDA toolkit - Windows 7,8 and Server 2008,2012
      win_shell: C:\temp\cuda_9.0.176_windows_network-exe.exe -s CUDAToolkit_9.0
      when: (cuda_installed.stat.exists == false) and (ansible_distribution_major_version == "5" or ansible_distribution_major_version == "6")
      tags: Cuda_Toolkit

    - name: Cleanup NVidia CUDA toolkit - Windows 7,8 and Server 2008,2012
      file:
        path: C:\temp\cuda_9.0.176_windows_network-exe.exe
        state: absent
      when: (cuda_installed.stat.exists == false) and (ansible_distribution_major_version == "5" or ansible_distribution_major_version == "6")
      tags: Cuda_Toolkit

    - name: Download NVidia CUDA toolkit - Windows 10 and Server 2016
      win_get_url:
        url: 'https://developer.nvidia.com/compute/cuda/9.0/Prod/network_installers/cuda_9.0.176_win10_network-exe'
        dest: 'C:\temp\cuda_9.0.176_win10_network-exe.exe'
      when: (cuda_installed.stat.exists == false and ansible_distribution_major_version == "10")
      tags: Cuda_Toolkit

    - name: Install NVidia CUDA toolkit - Windows 10 and Server 2016
      win_shell: C:\temp\cuda_9.0.176_win10_network-exe.exe -s CUDAToolkit_9.0
      when: (cuda_installed.stat.exists == false and ansible_distribution_major_version == "10")
      tags: Cuda_Toolkit

    - name: Cleanup NVidia CUDA toolkit - Windows 10 and Server 2016
      win_file:
        path: C:\temp\cuda_9.0.176_win10_network-exe.exe
        state: absent
      when: (cuda_installed.stat.exists == false and ansible_distribution_major_version == "10")
      tags: Cuda_Toolkit
  
    ###################
    # NTP Time Server #
    ###################
    - name: NTP - regedit - Synchronize with an external time source
      win_regedit:
        path: HKLM:\SYSTEM\CurrentControlSet\Services\W32Time\Parameters
        name: Type
        data: NTP
        type: string
      tags: ntp

    - name: NTP - regedit - Set AnnounceFlags 
      win_regedit:
        path: HKLM:\SYSTEM\CurrentControlSet\Services\W32Time\Config
        name: AnnounceFlags
        data: 5
        type: dword
      tags: ntp

    - name: NTP - regedit - Enable
      win_regedit:
        path: HKLM:\SYSTEM\CurrentControlSet\Services\W32Time\TimeProviders\NtpServer
        name: Enabled
        data: 1
        type: dword
      tags: ntp

    - name: NTP - regedit - Specify time sources
      win_regedit:
        path: HKLM:\SYSTEM\CurrentControlSet\Services\W32Time\Parameters
        name: NtpServer
        data: 1.pool.ntp.org,0x1
        type: string
      tags: ntp

    - name: NTP - regedit - Set MaxPosPhaseCorrection
      win_regedit:
        path: HKLM:\SYSTEM\CurrentControlSet\Services\W32Time\Config
        name: MaxNegPhaseCorrection
        data: 708
        type: dword
      tags: ntp

    - name: NTP - Service w32time restart
      win_service:
        name: w32time
        state: restarted
      tags: ntp

    ################
    # Pass or Fail #
    ################
    - name: Send Slack notification, successful
      include_tasks: slack_notification/successful_slack.yml
      when: Slack_Notification == "Enabled"
      tags: slack

    rescue:
    - name: Send Slack notification, failure
      include_tasks: slack_notification/failure_slack.yml
      when: Slack_Notification == "Enabled"
      tags: slack
